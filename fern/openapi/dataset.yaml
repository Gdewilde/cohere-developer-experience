post:
  x-fern-audiences: [public]
  summary: Create a Dataset
  operationId: create-dataset
  description: Create a dataset by uploading a file. See ['Dataset
    Creation'](/docs/datasets#dataset-creation) for more
    information.
  tags: [/datasets]
  x-fern-sdk-group-name: datasets
  x-fern-sdk-method-name: create
  requestBody:
    content:
      multipart/form-data:
        schema:
          type: object
          x-fern-audiences: ['public']
          properties:
            data:
              type: string
              x-fern-audiences: ['public']
              format: binary
              description: The file to upload
            eval_data:
              type: string
              x-fern-audiences: ['public']
              format: binary
              description: An optional evaluation file to upload
          required:
            - data
  parameters:
    - in: query
      name: name
      required: true
      schema:
        type: string
        x-fern-audiences: ['public']
      description: The name of the uploaded dataset.
    - in: query
      name: type
      required: true
      schema:
        $ref: './types/DatasetType.yaml'
      description: The dataset type, which is used to validate the data. Valid types
        are `embed-input`, `reranker-finetune-input`,
        `single-label-classification-finetune-input`, `chat-finetune-input`, and
        `multi-label-classification-finetune-input`.
    - in: query
      name: keep_original_file
      schema:
        type: boolean
        x-fern-audiences: ['public']
      description: Indicates if the original file should be stored.
    - in: query
      name: skip_malformed_input
      schema:
        type: boolean
        x-fern-audiences: ['public']
      description: Indicates whether rows with malformed input should be dropped
        (instead of failing the validation check). Dropped rows will be returned
        in the warnings field.
    - in: query
      name: keep_fields
      schema:
        type: array
        items:
          type: string
          x-fern-audiences: ['public']
      description: List of names of fields that will be persisted in the Dataset. By
        default the Dataset will retain only the required fields indicated in
        the [schema for the corresponding Dataset
        type](/docs/datasets#dataset-types). For example,
        datasets of type `embed-input` will drop all fields other than the
        required `text` field. If any of the fields in `keep_fields` are missing
        from the uploaded file, Dataset validation will fail.
    - in: query
      name: optional_fields
      schema:
        type: array
        items:
          type: string
          x-fern-audiences: ['public']
      description: List of names of fields that will be persisted in the Dataset. By
        default the Dataset will retain only the required fields indicated in
        the [schema for the corresponding Dataset
        type](/docs/datasets#dataset-types). For example,
        Datasets of type `embed-input` will drop all fields other than the
        required `text` field. If any of the fields in `optional_fields` are
        missing from the uploaded file, Dataset validation will pass.
    - in: query
      name: text_separator
      schema:
        type: string
        x-fern-audiences: ['public']
      description: Raw .txt uploads will be split into entries using the
        text_separator value.
    - in: query
      name: csv_delimiter
      schema:
        type: string
        x-fern-audiences: ['public']
      description: The delimiter used for .csv uploads.
    - in: query
      x-internal: true
      name: dry_run
      schema:
        type: boolean
      description: flag to enable dry_run mode
    - $ref: './types/RequestSource.yaml'
  x-readme:
    samples-languages:
      - python
      - java
      - python
      - java
      - node
      - curl
      - go
    code-samples:
      - language: go
        name: Cohere Go SDK
        install: go get github.com/cohere-ai/cohere-go/v2
        code:
          $ref: './snippets/go/dataset-post/main.go'
      - language: python
        name: Sync
        install: python -m pip install cohere --upgrade
        code:
          $ref: ./snippets/python/dataset-post.py
      - language: python
        name: Async
        install: python -m pip install cohere --upgrade
        code:
          $ref: ./snippets/python-async/dataset-post.py
      - language: java
        name: Cohere java SDK
        install: implementation 'com.cohere:cohere-java:1.0.4'
        code:
          $ref: ./snippets/java/app/src/main/java/DatasetPost.java
      - language: node
        name: Cohere TypeScript SDK
        install: npm i cohere-ai
        code:
          $ref: ./snippets/node/dataset-post.ts
      - language: curl
        name: cURL
        code:
          $ref: ./snippets/curl/dataset-post.sh
  responses:
    '400':
      $ref: "./errors/BadRequest.yaml"
    '401':
      $ref: "./errors/Unauthorized.yaml"
    '403':
      $ref: "./errors/Forbidden.yaml"
    '404':
      $ref: "./errors/NotFound.yaml"
    '422':
      $ref: "./errors/UnprocessableEntity.yaml"
    '429':
      $ref: './errors/RateLimit.yaml'
    '498':
      $ref: "./errors/InvalidToken.yaml"
    '499':
      $ref: "./errors/RequestCancelled.yaml"
    '500':
      $ref: "./errors/InternalServerError.yaml"
    '501':
      $ref: "./errors/NotImplemented.yaml"
    '503':
      $ref: "./errors/ServiceUnavailable.yaml"
    '504':
      $ref: "./errors/GatewayTimeout.yaml"
    '200':
      description: A successful response.
      content:
        application/json:
          schema:
            type: object
            x-fern-audiences: ['public']
            properties:
              id:
                type: string
                x-fern-audiences: ['public']
                description: The dataset ID
              # the following are private fields used by the dry_run flag
              validation_status:
                x-internal: true
                $ref: './types/DatasetValidationStatus.yaml'
              validation_errors:
                x-internal: true
                type: array
                items:
                  type: string
                description: Errors found during validation
              validation_warnings:
                x-internal: true
                type: array
                items:
                  type: string
                description: Warnings found during validation
              schema:
                x-internal: true
                type: string
                description: the avro schema of the dataset
              metrics:
                x-internal: true
                $ref: './types/Metrics.yaml'
              dataset_parts:
                x-internal: true
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: the name of the dataset part
                    num_rows:
                      type: number
                      description: the number of rows in the dataset part
                    samples:
                      type: array
                      items:
                        type: string
                        description: the first few rows of the dataset part
                    part_kind:
                      type: string
                      description: the kind of dataset part
                  description: the underlying files that make up the dataset
get:
  x-fern-audiences: [public]
  summary: List Datasets
  operationId: list-datasets
  description: List datasets that have been created.
  tags: [/datasets]
  x-fern-sdk-group-name: datasets
  x-fern-sdk-method-name: list
  parameters:
    - name: datasetType
      in: query
      description: optional filter by dataset type
      schema:
        type: string
        x-fern-audiences: ['public']
    - name: before
      in: query
      description: optional filter before a date
      schema:
        type: string
        x-fern-audiences: ['public']
        format: date-time
    - name: after
      in: query
      description: optional filter after a date
      schema:
        type: string
        x-fern-audiences: ['public']
        format: date-time
    - name: limit
      in: query
      description: optional limit to number of results
      schema:
        type: number
        x-fern-audiences: ['public']
    - name: offset
      in: query
      description: optional offset to start of results
      schema:
        type: number
        x-fern-audiences: ['public']
    - name: validationStatus
      in: query
      description: optional filter by validation status
      schema:
        $ref: './types/DatasetValidationStatus.yaml'
    - $ref: './types/RequestSource.yaml'
  x-readme:
    samples-languages:
      - python
      - java
      - python
      - java
      - node
      - curl
      - go
    code-samples:
      - language: go
        name: Cohere Go SDK
        install: go get github.com/cohere-ai/cohere-go/v2
        code:
          $ref: './snippets/go/dataset-get/main.go'
      - language: python
        name: Sync
        install: python -m pip install cohere --upgrade
        code:
          $ref: ./snippets/python/dataset-get.py
      - language: python
        name: Async
        install: python -m pip install cohere --upgrade
        code:
          $ref: ./snippets/python-async/dataset-get.py
      - language: java
        name: Cohere java SDK
        install: implementation 'com.cohere:cohere-java:1.0.4'
        code:
          $ref: ./snippets/java/app/src/main/java/DatasetGet.java
      - language: node
        name: Cohere TypeScript SDK
        install: npm i cohere-ai
        code:
          $ref: ./snippets/node/dataset-get.ts
      - language: curl
        name: cURL
        code:
          $ref: ./snippets/curl/dataset-get.sh
  responses:
    '400':
      $ref: "./errors/BadRequest.yaml"
    '401':
      $ref: "./errors/Unauthorized.yaml"
    '403':
      $ref: "./errors/Forbidden.yaml"
    '404':
      $ref: "./errors/NotFound.yaml"
    '422':
      $ref: "./errors/UnprocessableEntity.yaml"
    '429':
      $ref: './errors/RateLimit.yaml'
    '498':
      $ref: "./errors/InvalidToken.yaml"
    '499':
      $ref: "./errors/RequestCancelled.yaml"
    '500':
      $ref: "./errors/InternalServerError.yaml"
    '501':
      $ref: "./errors/NotImplemented.yaml"
    '503':
      $ref: "./errors/ServiceUnavailable.yaml"
    '504':
      $ref: "./errors/GatewayTimeout.yaml"
    '200':
      description: A successful response.
      content:
        application/json:
          schema:
            type: object
            x-fern-audiences: ['public']
            properties:
              datasets:
                type: array
                x-fern-audiences: ['public']
                items:
                  $ref: './types/Dataset.yaml'
