post:
  x-fern-audiences: [public]
  summary: Rerank
  operationId: rerank
  parameters:
    - $ref: './types/RequestSource.yaml'
  responses:
    '400':
      $ref: "./errors/BadRequest.yaml"
    '401':
      $ref: "./errors/Unauthorized.yaml"
    '403':
      $ref: "./errors/Forbidden.yaml"
    '404':
      $ref: "./errors/NotFound.yaml"
    '422':
      $ref: "./errors/UnprocessableEntity.yaml"
    '429':
      $ref: './errors/RateLimit.yaml'
    '498':
      $ref: "./errors/InvalidToken.yaml"
    '499':
      $ref: "./errors/RequestCancelled.yaml"
    '500':
      $ref: "./errors/InternalServerError.yaml"
    '501':
      $ref: "./errors/NotImplemented.yaml"
    '503':
      $ref: "./errors/ServiceUnavailable.yaml"
    '504':
      $ref: "./errors/GatewayTimeout.yaml"
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            x-fern-audiences: ['public']
            properties:
              id:
                type: string
                x-fern-audiences: ['public']
              results:
                type: array
                x-fern-audiences: ['public']
                description: An ordered list of ranked documents
                items:
                  type: object
                  x-fern-audiences: ['public']
                  properties:
                    document:
                      type: object
                      x-fern-audiences: ['public']
                      description: If `return_documents` is set as `false` this will return none, if `true` it will return the documents passed in
                      properties:
                        text:
                          type: string
                          x-fern-audiences: ['public']
                          description: The text of the document to rerank
                      required:
                        - text
                    index:
                      type: integer
                      x-fern-audiences: ['public']
                      description: Corresponds to the index in the original list of documents to which the ranked document belongs. (i.e. if the first value in the `results` object has an `index` value of 3, it means in the list of documents passed in, the document at `index=3` had the highest relevance)
                    relevance_score:
                      type: number
                      x-fern-audiences: ['public']
                      format: float
                      description: Relevance scores are normalized to be in the range `[0, 1]`. Scores close to `1` indicate a high relevance to the query, and scores closer to `0` indicate low relevance. It is not accurate to assume a score of 0.9 means the document is 2x more relevant than a document with a score of 0.45
                      readOnly: true
                  required:
                    - index
                    - relevance_score
              meta:
                $ref: './types/ApiMeta.yaml'
                x-fern-audiences: ['public']
            required:
              - results
  requestBody:
    content:
      application/json:
        schema:
          type: object
          x-fern-audiences: ['public']
          properties:
            model:
              type: string
              x-fern-audiences: ['public']
              description: 'The identifier of the model to use, one of :
                `rerank-english-v3.0`, `rerank-multilingual-v3.0`,
                `rerank-english-v2.0`, `rerank-multilingual-v2.0`'
            query:
              type: string
              x-fern-audiences: ['public']
              description: The search query
            documents:
              type: array
              x-fern-audiences: ['public']
              description: |-
                A list of document objects or strings to rerank.
                If a document is provided the text fields is required and all other fields will be preserved in the response.

                The total max chunks (length of documents * max_chunks_per_doc) must be less than 10000.

                We recommend a maximum of 1,000 documents for optimal endpoint performance.
              items:
                oneOf:
                  - type: string
                  - $ref: "./types/RerankDocument.yaml"
            top_n:
              type: integer
              x-fern-audiences: ['public']
              minimum: 1
              description: 'The number of most relevant documents or indices to return,
                defaults to the length of the documents'
            rank_fields:
              type: array
              x-fern-audiences: ['public']
              items:
                type: string
                x-fern-audiences: ['public']
              description: |-
                If a JSON object is provided, you can specify which keys you would like to have considered for reranking. The model will rerank based on order of the fields passed in (i.e. rank_fields=['title','author','text'] will rerank using the values in title, author, text  sequentially. If the length of title, author, and text exceeds the context length of the model, the chunking will not re-consider earlier fields). If not provided, the model will use the default text field for ranking.
            return_documents:
              type: boolean
              x-fern-audiences: ['public']
              default: false
              description: |-
                - If false, returns results without the doc text - the api will return a list of {index, relevance score} where index is inferred from the list passed into the request.
                - If true, returns results with the doc text passed in - the api will return an ordered list of {index, text, relevance score} where index + text refers to the list passed into the request.
            max_chunks_per_doc:
              type: integer
              x-fern-audiences: ['public']
              description: The maximum number of chunks to produce internally from a document
              default: 10
          required:
            - query
            - documents
        examples:
          Example:
            value:
              model: rerank-english-v3.0
              query: What is the capital of the United States?
              documents:
                - Carson City is the capital city of the American state of
                  Nevada.
                - The Commonwealth of the Northern Mariana Islands is a group of
                  islands in the Pacific Ocean. Its capital is Saipan.
                - 'Washington, D.C. (also known as simply Washington or D.C.,
                  and officially as the District of Columbia) is the capital of
                  the United States. It is a federal district.'
                - 'Capital punishment (the death penalty) has existed in the
                  United States since beforethe United States was a country. As
                  of 2017, capital punishment is legal in 30 of the 50 states.'
    description: ''
  description: This endpoint takes in a query and a list of texts and produces an
    ordered array with each text assigned a relevance score.
  x-readme:
    samples-languages:
      - python
      - java
      - curl
      - node
      - go
    code-samples:
      - language: go
        name: Cohere Go SDK
        install: go get github.com/cohere-ai/cohere-go/v2
        code:
          $ref: './snippets/go/rerank-post/main.go'
      - language: node
        name: Cohere TypeScript SDK
        install: npm i cohere-ai
        code:
          $ref: ./snippets/node/rerank-post.ts
      - language: python
        name: Sync
        install: python -m pip install cohere --upgrade
        code:
          $ref: ./snippets/python/rerank-post.py
      - language: python
        name: Async
        install: python -m pip install cohere --upgrade
        code:
          $ref: ./snippets/python-async/rerank-post.py
      - language: java
        name: Cohere java SDK
        install: implementation 'com.cohere:cohere-java:1.0.4'
        code:
          $ref: ./snippets/java/app/src/main/java/RerankPost.java
      - language: curl
        name: cURL
        code:
          $ref: ./snippets/curl/rerank-post.sh
