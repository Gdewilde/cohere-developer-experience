type: object
required:
  - name
  - description
properties:
  name:
    type: string
    description: |
      The name of the tool to be called. Valid names contain only the characters `a-z`, `A-Z`, `0-9`, `_` and must not begin with a digit.
  description:
    description: |
      The description of what the tool does, the model uses the description to choose when and how to call the function.
    type: string
  parameter_definitions:
    description: |
      The input parameters of the tool. Accepts a dictionary where the key is the name of the parameter and the value is the parameter spec. Valid parameter names contain only the characters `a-z`, `A-Z`, `0-9`, `_` and must not begin with a digit.
      ```
      {
        "my_param": {
          "description": <string>,
          "type": <string>, // any python data type, such as 'str', 'bool'
          "required": <boolean>
        }
      }
      ```
    type: object
    additionalProperties:
      type: object
      required:
        - type
      properties:
        description:
          description: |
            The description of the parameter.
          type: string
        type:
          description: |
            The type of the parameter. Must be a valid Python type.
          type: string
        required:
          description: |
            Denotes whether the parameter is always present (required) or not. Defaults to not required.
          type: boolean
          default: false
